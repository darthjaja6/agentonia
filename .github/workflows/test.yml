name: Test

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      django:
        build: .
        command: python manage.py runserver 0.0.0.0:8888
        volumes:
          - .:/app
        ports:
          - 8741:8888
        depends_on:
          - redis
          - vector-db
          # - neo4j

      redis:
        image: redis:6.2.4
        ports:
          - 6379:6379

      etcd:
        container_name: milvus-etcd
        image: quay.io/coreos/etcd:v3.5.5
        environment:
          - ETCD_AUTO_COMPACTION_MODE=revision
          - ETCD_AUTO_COMPACTION_RETENTION=1000
          - ETCD_QUOTA_BACKEND_BYTES=4294967296
          - ETCD_SNAPSHOT_COUNT=50000
        volumes:
          - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
        command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

      minio:
        container_name: milvus-minio
        image: minio/minio:RELEASE.2023-03-20T20-16-18Z
        environment:
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
        volumes:
          - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
        command: minio server /minio_data
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
          interval: 30s
          timeout: 20s
          retries: 3

      vector-db:
        container_name: milvus-standalone
        image: milvusdb/milvus:v2.2.9
        command: ["milvus", "run", "standalone"]
        environment:
          ETCD_ENDPOINTS: etcd:2379
          MINIO_ADDRESS: minio:9000
        volumes:
          - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
        ports:
          - "19530:19530"
          - "9091:9091"
        depends_on:
          - "etcd"
          - "minio"

        # neo4j:
        #   image: neo4j:5.8.0-community
        #   ports:
        #     - 7474:7474
        #     - 7687:7687

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-docker@v1

      - name: Build and run Docker container
        run: |
          docker-compose build
          docker-compose up -d

      - name: Wait for server to start
        run: |
          until $(curl --output /dev/null --silent --head --fail http://localhost:8741/ping); do
            echo "Waiting for server to start..."
            sleep 5
          done

      - name: Run external tests
        run: |
          # Replace this with your command to run the tests from external code
          sh run_tests.sh

      - name: Stop Docker containers
        run: docker-compose down
